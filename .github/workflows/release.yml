name: Create release as draft

on:
  workflow_dispatch:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"
    branches:  # TODO: Remove
      - "dev/release"

jobs:
  release:
    strategy:
      fail-fast: true
      matrix:
        target:
          - aarch64-apple-darwin
          - x86_64-apple-darwin
          - x86_64-pc-windows-msvc
          - aarch64-pc-windows-msvc
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
        format: ['bin']
        include:
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-pc-windows-msvc
            format: msi
            os: windows-latest
          - target: aarch64-pc-windows-msvc
            os: windows-latest
          - target: aarch64-pc-windows-msvc
            format: msi
            os: windows-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest

    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v4

      - name: Setup rust toolchain and cache
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: ${{matrix.target}}
          rustflags: ''  # Keep, as otherwise the defaults will be used

      - name: Setup nushell
        uses: hustcer/setup-nu@v3
        with:
          version: "*"

      - name: Build nur archive
        id: build
        run: nu .github/workflows/release.nu
        env:
          OS: ${{ matrix.os }}
          REF: ${{ github.ref }}
          TARGET: ${{ matrix.target }}
          FORMAT: ${{ matrix.format }}

      - name: Publish archives into draft release
        uses: softprops/action-gh-release@v2
        # if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          draft: true
          tag_name: 'v0.1.15'  # TODO: REMOVE
          name: "Release ${{ github.ref_name }}"
          generate_release_notes: true
          files: ${{ steps.build.outputs.archive }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
